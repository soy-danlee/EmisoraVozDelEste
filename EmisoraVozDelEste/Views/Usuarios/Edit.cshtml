@model EmisoraVozDelEste.Models.Usuarios

@{
    ViewBag.Title = "Edit";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-lg">
                <div class="card-header text-white" style="background-color: #0a1a2f;">
                    <h4><i class="fas fa-user-edit me-2"></i>Editar Usuario</h4>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                        @Html.HiddenFor(model => model.Id)

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "form-label fw-bold" })
                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label fw-bold" })
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Contraseña, htmlAttributes: new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                @Html.EditorFor(model => model.Contraseña, new { htmlAttributes = new { @class = "form-control", id = "passwordField" } })
                                <button type="button" class="btn btn-outline-secondary" id="togglePassword" title="Mostrar / Ocultar contraseña">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            @Html.ValidationMessageFor(model => model.Contraseña, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-4">
                            @Html.LabelFor(model => model.RolId, "Rol", htmlAttributes: new { @class = "form-label fw-bold" })
                            @Html.DropDownList("RolId", null, htmlAttributes: new { @class = "form-select" })
                            @Html.ValidationMessageFor(model => model.RolId, "", new { @class = "text-danger" })
                        </div>

                        <div class="d-flex justify-content-between">
                            <input type="submit" value="Guardar" class="btn text-white" style="background-color: #0a1a2f;" />
                            @Html.ActionLink("Volver a la lista", "Index", null, new { @class = "btn btn-secondary" })
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        document.getElementById("togglePassword").addEventListener("click", function () {
            const passwordField = document.getElementById("passwordField");
            const icon = this.querySelector("i");

            if (passwordField.type === "password") {
                passwordField.type = "text";
                icon.classList.remove("fa-eye");
                icon.classList.add("fa-eye-slash");
            } else {
                passwordField.type = "password";
                icon.classList.remove("fa-eye-slash");
                icon.classList.add("fa-eye");
            }
        });
    </script>
}
